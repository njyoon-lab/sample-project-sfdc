pipeline {
    agent {
        dockerfile {
            filename 'Dockerfile' // Uses Dockerfile in the root of the repo
            dir '.' // Build context is the current directory
            additionalBuildArgs ''
            args '-u root:root' // Run as root to install CLI
        }
    }
    environment {
        MY_SECRET_FILE = credentials('SALESFORCE_SERVER_KEY')
        SF_USER = credentials('SF_CREDENTIALS')
        SF_CLIENT_ID = credentials('SF_CLIENT_ID')
    }
    stages {
        stage('Verify SFDX CLI Installation') {
            steps {
                sh 'sf --version'
            }
        }
        stage('Authenticate to Salesforce Org') {
            steps {
                sh '''
                   sf org login jwt --client-id ${SF_CLIENT_ID_USR} \
                   --jwt-key-file ${MY_SECRET_FILE} --username ${SF_USER_USR} \
                   --instance-url ${SFDC_ENV} --alias my-hub-org --set-default-dev-hub --set-default 
                '''
            }
        }
        stage('Validate PR') {
            when {
                expression { return env.CHANGE_ID != null }
            }
            steps {
                sh '''
                   sf project deploy start --target-org my-hub-org --wait 20 --verbose --ignore-conflicts --dryrun -l RunSLocalTests
                '''
            }
        }
        stage('Deploy') {
            when {
                expression { return env.CHANGE_ID == null }
            }
            steps {
                sh '''
                   sf project deploy start --target-org my-hub-org --wait 20 --verbose --ignore-conflicts -l RunSLocalTests
                '''
            }
        }
    }
}